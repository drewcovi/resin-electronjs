{"version":3,"sources":["vendor/ember-cli/app-prefix.js","thermostat/app.js","thermostat/components/incrementer-button.js","thermostat/components/realtime-clock.js","thermostat/components/temperature-control.js","thermostat/components/welcome-page.js","thermostat/helpers/app-version.js","thermostat/helpers/pluralize.js","thermostat/helpers/singularize.js","thermostat/initializers/app-version.js","thermostat/initializers/container-debug-adapter.js","thermostat/initializers/ember-data.js","thermostat/initializers/export-application-global.js","thermostat/instance-initializers/ember-data.js","thermostat/resolver.js","thermostat/router.js","thermostat/services/ajax.js","thermostat/templates/application.js","thermostat/templates/components/incrementer-button.js","thermostat/templates/components/realtime-clock.js","thermostat/templates/components/temperature-control.js","thermostat/templates/index.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n\n\n","define('thermostat/app', ['exports', 'thermostat/resolver', 'ember-load-initializers', 'thermostat/config/environment'], function (exports, _resolver, _emberLoadInitializers, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  const App = Ember.Application.extend({\n    modulePrefix: _environment.default.modulePrefix,\n    podModulePrefix: _environment.default.podModulePrefix,\n    Resolver: _resolver.default\n  });\n\n  (0, _emberLoadInitializers.default)(App, _environment.default.modulePrefix);\n\n  exports.default = App;\n});","define('thermostat/components/incrementer-button', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    tagName: 'button',\n    classNames: ['btn', 'btn-link'],\n    inverted: false,\n    click() {\n      if (this.get('inverted')) {\n\n        alert('decrement');\n      } else {\n        alert('increment');\n      }\n    },\n    init() {\n      this._super();\n      let classNames = this.get('classNames').toArray();\n      console.log(classNames);\n      // if(this.get('inverted')){\n      //   this.set('classNames', classNames.push('rotate-180'));\n      // }\n    }\n  });\n});","define('thermostat/components/realtime-clock', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    classNames: ['display-4'],\n    hour: Ember.computed('clock.hour', function () {\n      return this.get('clock.hour') % 12;\n    }),\n    minute: Ember.computed('clock.minute', function () {\n      let digit = this.get('clock.minute').toString();\n      return digit.length < 2 ? '0' + digit : digit;\n    }),\n    second: Ember.computed('clock.second', function () {\n      let digit = this.get('clock.second').toString();\n      return digit.length < 2 ? '0' + digit : digit;\n    })\n  });\n});","define('thermostat/components/temperature-control', ['exports'], function (exports) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.Component.extend({\n    currentTemp: 76\n  });\n});","define('thermostat/components/welcome-page', ['exports', 'ember-welcome-page/components/welcome-page'], function (exports, _welcomePage) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _welcomePage.default;\n    }\n  });\n});","define('thermostat/helpers/app-version', ['exports', 'thermostat/config/environment', 'ember-cli-app-version/utils/regexp'], function (exports, _environment, _regexp) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.appVersion = appVersion;\n  function appVersion(_, hash = {}) {\n    const version = _environment.default.APP.version;\n    // e.g. 1.0.0-alpha.1+4jds75hf\n\n    // Allow use of 'hideSha' and 'hideVersion' For backwards compatibility\n    let versionOnly = hash.versionOnly || hash.hideSha;\n    let shaOnly = hash.shaOnly || hash.hideVersion;\n\n    let match = null;\n\n    if (versionOnly) {\n      if (hash.showExtended) {\n        match = version.match(_regexp.versionExtendedRegExp); // 1.0.0-alpha.1\n      }\n      // Fallback to just version\n      if (!match) {\n        match = version.match(_regexp.versionRegExp); // 1.0.0\n      }\n    }\n\n    if (shaOnly) {\n      match = version.match(_regexp.shaRegExp); // 4jds75hf\n    }\n\n    return match ? match[0] : version;\n  }\n\n  exports.default = Ember.Helper.helper(appVersion);\n});","define('thermostat/helpers/pluralize', ['exports', 'ember-inflector/lib/helpers/pluralize'], function (exports, _pluralize) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _pluralize.default;\n});","define('thermostat/helpers/singularize', ['exports', 'ember-inflector/lib/helpers/singularize'], function (exports, _singularize) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _singularize.default;\n});","define('thermostat/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'thermostat/config/environment'], function (exports, _initializerFactory, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  let name, version;\n  if (_environment.default.APP) {\n    name = _environment.default.APP.name;\n    version = _environment.default.APP.version;\n  }\n\n  exports.default = {\n    name: 'App Version',\n    initialize: (0, _initializerFactory.default)(name, version)\n  };\n});","define('thermostat/initializers/container-debug-adapter', ['exports', 'ember-resolver/resolvers/classic/container-debug-adapter'], function (exports, _containerDebugAdapter) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'container-debug-adapter',\n\n    initialize() {\n      let app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _containerDebugAdapter.default);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('thermostat/initializers/ember-data', ['exports', 'ember-data/setup-container', 'ember-data'], function (exports, _setupContainer) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: 'ember-data',\n    initialize: _setupContainer.default\n  };\n});","define('thermostat/initializers/export-application-global', ['exports', 'thermostat/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.initialize = initialize;\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_environment.default.exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _environment.default.exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = Ember.String.classify(_environment.default.modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function () {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports.default = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define(\"thermostat/instance-initializers/ember-data\", [\"exports\", \"ember-data/initialize-store-service\"], function (exports, _initializeStoreService) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = {\n    name: \"ember-data\",\n    initialize: _initializeStoreService.default\n  };\n});","define('thermostat/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = _emberResolver.default;\n});","define('thermostat/router', ['exports', 'thermostat/config/environment'], function (exports, _environment) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n\n\n  const Router = Ember.Router.extend({\n    location: _environment.default.locationType,\n    rootURL: _environment.default.rootURL\n  });\n\n  Router.map(function () {});\n\n  exports.default = Router;\n});","define('thermostat/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _ajax) {\n  'use strict';\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function () {\n      return _ajax.default;\n    }\n  });\n});","define(\"thermostat/templates/application\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"Btole9A7\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[20,\\\"outlet\\\"],false]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"thermostat/templates/application.hbs\" } });\n});","define(\"thermostat/templates/components/incrementer-button\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"N6i+HIRb\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"svg\\\"],[10,\\\"width\\\",\\\"63px\\\"],[10,\\\"height\\\",\\\"63px\\\"],[10,\\\"viewBox\\\",\\\"0 0 63 63\\\"],[10,\\\"version\\\",\\\"1.1\\\"],[10,\\\"xmlns\\\",\\\"http://www.w3.org/2000/svg\\\",\\\"http://www.w3.org/2000/xmlns/\\\"],[10,\\\"xmlns:xlink\\\",\\\"http://www.w3.org/1999/xlink\\\",\\\"http://www.w3.org/2000/xmlns/\\\"],[8],[0,\\\"\\\\n  \\\"],[6,\\\"ellipse\\\"],[10,\\\"id\\\",\\\"Oval-Copy-3\\\"],[10,\\\"fill\\\",\\\"#ffffff\\\"],[10,\\\"stroke\\\",\\\"#BCBCBC\\\"],[10,\\\"stroke-width\\\",\\\"2\\\"],[10,\\\"opacity\\\",\\\"0.43\\\"],[10,\\\"cx\\\",\\\"31.4361902\\\"],[10,\\\"cy\\\",\\\"31.3806661\\\"],[10,\\\"rx\\\",\\\"30.4361902\\\"],[10,\\\"ry\\\",\\\"30.3806661\\\"],[8],[9],[0,\\\"\\\\n  \\\"],[6,\\\"polygon\\\"],[10,\\\"id\\\",\\\"Page-1-Copy-3\\\"],[10,\\\"fill\\\",\\\"#000000\\\"],[10,\\\"fill-rule\\\",\\\"nonzero\\\"],[10,\\\"transform\\\",\\\"translate(33.007192, 28.763835) rotate(-360.000000) translate(-33.007192, -28.763835) \\\"],[10,\\\"points\\\",\\\"23.6353553 36.9953185 20.6553781 34.3270352 33.0071921 20.5323515 45.3590061 34.3270352 42.3790289 36.9953185 33.0071921 26.5287163\\\"],[8],[9],[0,\\\"\\\\n\\\"],[9]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"thermostat/templates/components/incrementer-button.hbs\" } });\n});","define(\"thermostat/templates/components/realtime-clock\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"cM2DyNiW\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[20,\\\"hour\\\"],false],[0,\\\":\\\"],[1,[20,\\\"minute\\\"],false],[0,\\\":\\\"],[1,[20,\\\"second\\\"],false]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"thermostat/templates/components/realtime-clock.hbs\" } });\n});","define(\"thermostat/templates/components/temperature-control\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"NWdaisjN\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[6,\\\"h1\\\"],[10,\\\"class\\\",\\\"display-1 text-center\\\"],[8],[0,\\\"\\\\n  \\\"],[1,[20,\\\"currentTemp\\\"],false],[0,\\\"\\\\n\\\"],[9],[0,\\\"\\\\n\\\"],[6,\\\"div\\\"],[10,\\\"class\\\",\\\"align-items-center\\\"],[8],[0,\\\"\\\\n\\\"],[1,[26,\\\"incrementer-button\\\",null,[[\\\"inverted\\\"],[\\\"true\\\"]]],false],[0,\\\"\\\\n\\\"],[1,[20,\\\"incrementer-button\\\"],false],[0,\\\"\\\\n\\\"],[9]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"thermostat/templates/components/temperature-control.hbs\" } });\n});","define(\"thermostat/templates/index\", [\"exports\"], function (exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = Ember.HTMLBars.template({ \"id\": \"b73fYj7e\", \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[26,\\\"realtime-clock\\\",null,[[\\\"class\\\"],[\\\"text-center\\\"]]],false],[0,\\\"\\\\n\\\"],[1,[20,\\\"temperature-control\\\"],false]],\\\"hasEval\\\":false}\", \"meta\": { \"moduleName\": \"thermostat/templates/index.hbs\" } });\n});","\n","define('thermostat/config/environment', [], function() {\n  var prefix = 'thermostat';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","if (!runningTests) {\n  require(\"thermostat/app\")[\"default\"].create({\"name\":\"thermostat\",\"version\":\"0.0.0+33a751db\"});\n}\n"],"names":[],"mappings":"AAAA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;","file":"thermostat.js"}